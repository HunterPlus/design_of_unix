	Figure 7.9 Source Code for a Program that Catches Signals
------------------------------------------------------------------------------------------
#include <stdio.h>
#include <signal.h>

void catcher(int sig)		/* void (*sighandler_t)(int) */
{
	if (sig == SIGINT)
		printf("SIGINT %d catched\n", SIGINT);
}

int main()
{
	signal(SIGINT, catcher);
	kill(0, SIGINT);		/* 0 - send to caller process group */
}

	Figure 7.10 Disassembly of Program that Catches Signals
--------------------------------------------------------------------------------------
************************* VAX DISASSEMBLER ****************************************
_main()
	e4:
	e6:	pushab	0x18(pc)
	ec:	pushl	$0x2
# next line calls signal
	ee:	calls	$0x2, 0x23(pc)
	f5:	pushl	$0x2
	f7:	clrl	-(sp)
# next line calls kill library routine
	f9:	calls	$0x2, 0x8(pc)
	100:	ret
	101:	halt
	102:	halt
	103:	halt
_catcher()
	104:
	106:	ret
	107:	halt
_kill()
	108:
# next line traps into kernal
	10a:	chmk	$0x25
	10c:	bgequ	0x6 <0x114>
	10e:	jmp	0x14(pc)
	114:	clrl	r0
	116	ret
