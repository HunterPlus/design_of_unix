	Figure 11.11 Attaching Shared Memory Twice to a Process
--------------------------------------------------------------------------------------------------
#include <stdio.h>
#include <stdlib.h>
#include <signal.h>
#include <unistd.h>
#include <sys/shm.h>

#define SHMKEY  75
#define K       1024

int     shmid;
int main()
{
        int     i, *pint;
        void    *addr1, *addr2;
        void    cleanup(int);
        
        for (i = 0; i < 20; i++)
                signal(i, cleanup);
        shmid = shmget(SHMKEY, 128 * K, 0777 | IPC_CREAT);
        addr1 = shmat(shmid, 0, 0);
        addr2 = shmat(shmid, 0, 0);
        printf("addr1 %p addr2 %p\n", addr1, addr2);
        pint = (int *) addr1;
        
        for (i = 0; i < 256; i++)
                *pint++ = i;
        pint = (int *) addr1;
        *pint = 256;
        
        pint = (int *) addr2;
        for (i = 0; i < 256; i++)
                printf("index %2d\tvalue %d\n", i, *pint++);
                
        pause();
}

void cleanup(int signo)
{
        shmctl(shmid, IPC_RMID, 0);
        printf("exit\n");
        exit(0);
}
