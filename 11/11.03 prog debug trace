        Figure 11.3 Debug - A Tracing Process
---------------------------------------------------------------------
/* ./a.out 0x601060 */
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/wait.h>
#include <sys/ptrace.h>

#define TR_SETUP 0
#define TR_WRITE 5
#define TR_RESUME 7

int addr;
int main(int argc, char *argv[])
{
        int     i, pid;
        
        sscanf(argv[1], "%x", &addr);
        if ((pid = fork()) == 0) {
                ptrace(TR_SETUP, 0, 0, 0);
                execl("trace", "trace", NULL);
                exit(0);
        }
        wait(NULL); 
        for (i = 0; i < 32; i++) {                                            
                /* write value of i into address addr in proc pid */
                if (ptrace(TR_WRITE, pid, addr, i) == -1)
                        exit(1);
                addr += sizeof(int);
        }
        /* traced process should resume execution */
        ptrace(TR_RESUME, pid, 1, 0);
        sleep(2);
}
